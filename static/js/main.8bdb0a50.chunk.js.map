{"version":3,"sources":["country.js","wrapper.js","country-list.js","input.js","serch.js","Region.js","action-list.js","header.js","borders.js","country-selected.js","country-page.js","App.js","reducer.js","serviceWorker.js","index.js"],"names":["CountryStyled","styled","div","Country","flag","name","population","region","capital","alpha3Code","nativeName","cioc","history","useHistory","onClick","push","slugify","loading","src","alt","className","WrapperStyled","Wrapper","children","CountryListStyled","CountryList","dispatch","useDispatch","countryListByName","useSelector","state","countryList","filterByRegion","length","countryFilteredByRegion","useEffect","fetch","then","res","json","list","type","payload","catch","console","log","map","key","InputStyled","label","Input","props","SerchStyled","Serch","useState","inputValue","setInputValue","placeholder","value","onChange","e","target","RegionFilterStyled","select","Region","selectEvent","regionSelected","ActionListStyled","ActionList","HeaderStyled","Header","setDarkMode","darkMode","to","BordersStyled","Borders","item","CountrySelectedStyled","countrySelected","subregion","topLevelDomain","currencies","languages","borders","CountryPageStyled","CountryPage","match","DBcountry","find","params","id","replace","aux","country","setCountry","resonse","data","goBack","store","createStore","action","filter","toLowerCase","includes","App","setChecked","mainClass","changeMedia","mq","matches","window","matchMedia","addListener","removeListener","path","component","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.8bdb0a50.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport slugify from 'slugify'\r\nconst CountryStyled = styled.div`\r\n  /* width: 264px; */\r\n  cursor:pointer;\r\n  text-align: left;\r\n  box-shadow: 0 0 7px 2px rgba(0,0,0,0.03);\r\n  border-radius:5px;\r\n  margin:auto;\r\n  /* overflow:hidden; */\r\n  &:hover .details{\r\n    border-radius: 0 0 5px 5px;\r\n    border:1px solid var(--black);\r\n    border-top:none;\r\n  }\r\n  img {\r\n    border-radius:5px 5px 0 0;\r\n    width: 100%;\r\n    height: 160px;\r\n    object-fit: cover;\r\n    vertical-align:top;\r\n  }\r\n  .details {\r\n    padding:1.2em 1.5em;\r\n    padding-bottom:2.5em;\r\n    border:1px solid transparent;\r\n    border-top:none;\r\n    transition:.3s border;\r\n    background: var(--white)\r\n  }\r\n  h2 {\r\n    margin: 0;\r\n    margin-bottom: 1rem;\r\n    font-size: 18px;\r\n    font-weight:700;\r\n  }\r\n  p {\r\n    span{\r\n      font-weight:600;\r\n      color:black;\r\n    }\r\n    font-weight:300;\r\n    font-size: 0.85em;\r\n    margin: 0.4rem 0;\r\n  }\r\n`;\r\nfunction Country({ flag, name, population, region, capital, nativeName,cioc,alpha3Code }) {\r\n  const history=useHistory();\r\n  // const id=cioc || name;\r\n\r\n  function handleClick() {\r\n    history.push(`/country/${slugify(alpha3Code)}`); // Crea una ruta especifica\r\n  }\r\n  return (\r\n    <CountryStyled onClick={handleClick}>\r\n      {/* loading=\"lazi\":Atributo de html que sirve para hacer una peticion de ese atributo a medida que vas haciendo scroll, por defecto carga una cantidad peque√±a de datos.Ojo para que esto puedas verlo debes tener desabilitado la cache del browser*/}\r\n      <img loading=\"lazy\" src={flag} alt=\"\" />\r\n      <div className=\"details\">\r\n        <h2>{name}</h2>\r\n        <p>\r\n          <span>Population:</span> {population}\r\n        </p>\r\n        <p>\r\n          <span>Region:</span> {region}\r\n        </p>\r\n        <p>\r\n          <span>Capital:</span> {capital}\r\n        </p>\r\n      </div>\r\n    </CountryStyled>\r\n  );\r\n}\r\n\r\nexport default Country;\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nconst WrapperStyled=styled.div`\r\n    max-width:1312px;\r\n    margin:auto;\r\n    padding:0 1rem;\r\n`\r\n\r\nfunction Wrapper({children}) {\r\n    return (\r\n        <WrapperStyled>\r\n            {children}\r\n        </WrapperStyled>\r\n    )\r\n}\r\n\r\nexport default Wrapper\r\n","import React,{useEffect } from \"react\";\r\nimport styled from 'styled-components'\r\nimport Country from './country';\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport Wrapper from './wrapper'\r\nconst CountryListStyled=styled.div`\r\n    display:grid;\r\n    grid-row-gap:2.3em;\r\n    background:var(--background);\r\n    grid-auto-flow:columns;\r\n    grid-column-gap:70px;\r\n    grid-template-columns:repeat(auto-fill,270px);\r\n    /* border: 1px solid red; */\r\n    justify-content:center;\r\n    padding: 3em 0;\r\n    /* grid-template-columns :1fr; */\r\n`\r\n\r\nfunction CountryList() {\r\n    const dispatch =useDispatch()\r\n    const countryListByName= useSelector((state)=> state.countryListByName)\r\n    const countryList=useSelector((state)=>{\r\n        if('' !== state.filterByRegion && countryListByName.length === 0){\r\n            return state.countryFilteredByRegion\r\n        }\r\n        if(countryListByName.length> 0){\r\n            return countryListByName\r\n        }\r\n        return state.countryList\r\n    })\r\n    // console.log('El estado total de mi app es:',countryList);\r\n    // hook --> useEffect\r\n    useEffect(()=>{\r\n        fetch('https://restcountries.eu/rest/v2/all')\r\n        .then((res)=>{\r\n            return res.json();\r\n        })\r\n        .then((list)=>{\r\n            dispatch({\r\n                type:'SET_COUNTRY_LIST',\r\n                payload:list\r\n            })\r\n            // console.log(list.length);\r\n        })\r\n        .catch(()=>{\r\n            console.log(\"Ops, Ocurrio un error\");\r\n        })\r\n    })\r\n\r\n\r\n    return (\r\n        <Wrapper>\r\n        <CountryListStyled>\r\n            {\r\n                countryList.map(({flag,name,population,region,capital, nativeName, cioc,alpha3Code })=>{\r\n                    return (\r\n                        <Country\r\n                        flag={flag}\r\n                        name={name}\r\n                        population={population}\r\n                        region={region}\r\n                        capital={capital}\r\n                        key={name}\r\n                        nativeName={nativeName}\r\n                        cioc={cioc}\r\n                        alpha3Code={alpha3Code}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n           \r\n           \r\n        </CountryListStyled>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default CountryList\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nconst InputStyled=styled.label`\r\ndisplay:inline-flex;\r\nbackground:var(--white);\r\n/* border: 1px solid green; */\r\nalign-items:center;\r\nbox-shadow:0 2px 9px 0 rgba(0,0,0,0.05);\r\npadding: 0 2rem;\r\nborder-radius:5px;\r\nflex:1;\r\ni{\r\n    margin-right:1.5em;\r\n    color:#c4c4c4;\r\n}\r\ninput{\r\n    border:none;\r\n    flex: 1;\r\n    height:48px;\r\n    line-height:48px;\r\n    box-sizing:border-box;\r\n    outline:0mm; /* Propiedad que coloca un linea fuera del border del elemento, para los inputs ya viene por defecto uno.*/\r\n    font-size:12px;\r\n    background:var(--white);\r\n    color: var(--black);\r\n    &::-webkit-input-placeholder{\r\n        color:#c4c4c4;\r\n        font-weight:300;\r\n    }\r\n}\r\n`\r\n\r\nfunction Input({...props}) {\r\n    return (\r\n        <InputStyled>\r\n            <i className=\"fas fa-search\"></i>\r\n            <input type=\"text\" {...props}/>\r\n        </InputStyled>\r\n    )\r\n}\r\n\r\nexport default Input\r\n","import React,{useState} from 'react'\r\nimport styled from 'styled-components'\r\nimport Input from './input'\r\nimport {useDispatch} from 'react-redux'\r\nconst SerchStyled=styled.div`\r\n    display:flex;\r\n    position: relative;\r\n    .close{\r\n        position:absolute;\r\n        right: .7em;\r\n        top:1em;\r\n        border-radius:50%;\r\n        border:none;\r\n        box-shadow:0 2px 9px 0 rgba(0,0,0,0.05);\r\n        cursor:pointer;\r\n    }\r\n`\r\n\r\nfunction Serch() {\r\n    const dispatch =useDispatch()\r\n    const [inputValue, setInputValue]=useState('')\r\n    const filterByName=(e)=>{\r\n        setInputValue(e.target.value)\r\n        dispatch({\r\n            type:'SET_COUNTRY_BY_NAME',\r\n            payload:e.target.value\r\n        })\r\n    }\r\n    const clearInput=()=>{\r\n        dispatch({\r\n            type:'SET_COUNTRY_BY_NAME',\r\n            payload:''\r\n        })\r\n        setInputValue('')\r\n    }\r\n    return (\r\n        <SerchStyled>\r\n            {\r\n                inputValue &&<i className=\"close fas fa-times\" onClick={clearInput}></i>\r\n            }\r\n            {/* {\r\n                countryListByName.length===0 && inputValue && <p><strong>{inputValue}</strong> no se encuetra en los paises</p>\r\n            } */}\r\n            <Input placeholder=\"Serch for a country...\" value={inputValue} onChange={filterByName}/>\r\n        </SerchStyled>\r\n    )\r\n}\r\n\r\nexport default Serch\r\n","import React from 'react'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport styled from 'styled-components'\r\n\r\nconst RegionFilterStyled=styled.select`\r\n    padding:1.3em;\r\n    border:none;\r\n    outline:0;\r\n    border-radius:5px;\r\n    box-shadow:0 2px 9px 0 rgba(0,0,0,0.05);\r\n    background:var(--white);\r\n    color: var(--black);\r\n`\r\n\r\nconst filterByRegionAction=(regionSelected)=>{\r\n    return{\r\n        type:'FILTER_BY_REGION',\r\n        payload:{regionSelected}\r\n    }\r\n}\r\nfunction Region() {\r\n    const dispatch=useDispatch()\r\n    const filterByRegion=useSelector((state)=>state.filterByRegion)\r\n    const onRegionChange=(selectEvent)=>{\r\n        const value=selectEvent.target.value;\r\n        dispatch(filterByRegionAction(value))\r\n    }\r\n    return (\r\n        <RegionFilterStyled onChange={onRegionChange} value={filterByRegion}>\r\n            <option value=\"\">Filter by region</option>\r\n            <option value=\"Africa\">Africa</option>\r\n            <option value=\"Americas\">Americas</option>\r\n            <option value=\"Asia\">Asia</option>\r\n            <option value=\"Europe\">Europe</option>\r\n            <option value=\"Oceania\">Oceania</option>\r\n        </RegionFilterStyled>\r\n    )\r\n}\r\n\r\nexport default Region\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Serch from './serch'\r\nimport Region  from './Region'\r\nimport Wrapper from './wrapper'\r\nconst ActionListStyled=styled.div`\r\n    .grid{\r\n        display:grid;\r\n        grid-template-columns:1fr;\r\n        grid-row-gap:20px;\r\n    }\r\n    @media screen and (min-width: 768px){\r\n        .grid{\r\n            grid-template-columns:480px 1fr 200px;\r\n        }\r\n    }\r\n`\r\n\r\nfunction ActionList() {\r\n    return (\r\n        <ActionListStyled>\r\n            <Wrapper>\r\n                <div className=\"grid\">\r\n                <Serch/>\r\n                <span></span>\r\n                <Region/>\r\n                </div>\r\n            </Wrapper>\r\n        </ActionListStyled>\r\n    )\r\n}\r\n\r\nexport default ActionList\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Wrapper from './wrapper'\r\nimport { Link } from 'react-router-dom'\r\nconst HeaderStyled=styled.div`\r\n    background:var(--white);\r\n    margin-bottom:1em;\r\n    box-shadow: 0 2px 4px 0  rgba(0,0,0,0.06);\r\n    .content{\r\n        height:80px;\r\n        display:flex;\r\n        align-items:center;\r\n        justify-content:space-between;\r\n    }\r\n    h1{\r\n        font-size:14px;\r\n    } \r\n    .dark-mode{\r\n        cursor: pointer;\r\n        .moon{\r\n            transform:rotate(-30deg);\r\n            display:inline-flex;\r\n            margin-right:10px;\r\n        }\r\n        p{\r\n            font-size:12px;\r\n            font-weight:600;\r\n        }\r\n    }\r\n    .title{\r\n        text-decoration:none;\r\n        color:var(--black);\r\n    }\r\n    @media screen and (min-width:768px){\r\n        margin-bottom: 3em;\r\n        h1{\r\n            font-size:24px;\r\n        }\r\n        p{\r\n            font-size:1rem !important;\r\n        }\r\n    }\r\n`\r\n\r\nfunction Header({setDarkMode, darkMode }) {\r\n    function handleClick() {\r\n        setDarkMode(!darkMode);\r\n    }\r\n    return (\r\n        <HeaderStyled>\r\n            <Wrapper>\r\n            <div className=\"content\">\r\n                <Link className=\"title\" to='/'>\r\n                    <h1>\r\n                    Where in the world?\r\n                    </h1>\r\n                    </Link>\r\n                <div className=\"dark-mode\">\r\n                    <p onClick={handleClick}>\r\n                        <span className=\"moon\">\r\n                            {\r\n                                darkMode ? <i className=\"fas fa-moon\"></i>: <i className=\"far fa-moon\"></i>\r\n                            }\r\n                        \r\n                        </span>\r\n                        Dark Mode\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            </Wrapper>\r\n\r\n        </HeaderStyled>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport slugify from 'slugify'\r\nconst BordersStyled=styled.div`\r\n    padding:.5em 2em;\r\n    margin-right:15px;\r\n    box-shadow:0 0  5px rgba(0,0,0,.3);\r\n    display:inline-flex;\r\n    margin-bottom:1rem;\r\n    background:var(--white);\r\n    cursor:pointer;\r\n`\r\n\r\nfunction Borders({item}) {\r\n    const history=useHistory();\r\n    // const id=cioc || name;\r\n  \r\n    function handleClick() {\r\n      history.push(`/country/${slugify(item)}`);\r\n    }\r\n    return (\r\n        <BordersStyled onClick={handleClick}>\r\n            {item}\r\n        </BordersStyled>\r\n    )\r\n}\r\n\r\nexport default Borders\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Borders from './borders'\r\nconst CountrySelectedStyled=styled.div`\r\nmargin-top:3em;\r\npadding-bottom:3em;\r\nimg{\r\n    width:100%;\r\n    margin-bottom:2em;\r\n}\r\n.grid{\r\n    display:grid;\r\n    grid-row-gap:1em;\r\n}\r\n.border-item{\r\n    padding:.5em 2em;\r\n    margin-right:15px;\r\n    box-shadow:0 0  5px rgba(0,0,0,.3);\r\n    display:inline-flex;\r\n    margin-bottom:1rem;\r\n    background:var(--white)\r\n}\r\n.languages{\r\n    span{\r\n        margin-right:10px;\r\n        &:after{\r\n            content:',';\r\n        }\r\n        &:last-child{\r\n            &:after{\r\n                display:none;\r\n            }\r\n        }\r\n    }\r\n}\r\n@media screen and (min-width:1024px){\r\n    display:grid;\r\n    grid-template-columns:1fr 1fr;\r\n    grid-column-gap:120px;\r\n    margin-top:5em;\r\n    .grid{\r\n        grid-template-columns:1fr 1fr;\r\n    }\r\n    .borders{\r\n        display:inline-flex;\r\n        margin-right:1em;\r\n        margin-top:3.5em;\r\n    }\r\n}\r\n`\r\n\r\nfunction countrySelected({\r\n    flag,\r\n    name,\r\n    nativeName,\r\n    population,\r\n    region,\r\n    subregion,\r\n    capital,\r\n    topLevelDomain,\r\n    currencies=[],\r\n    languages=[],\r\n    borders=[]\r\n}) {\r\n\r\n    return (\r\n        <div>\r\n            <CountrySelectedStyled>\r\n                <img src={flag} alt=\"\"/>\r\n                <div>\r\n                <h2>{name}</h2>\r\n                <div className=\"grid\">\r\n                    <div>\r\n                        <p><strong>Native Name:</strong> {nativeName}</p>\r\n                        <p><strong>Population:</strong> {population}</p>\r\n                        <p><strong>Region:</strong> {region}</p>\r\n                        <p><strong>Sub Region:</strong> {subregion}</p>\r\n                        <p><strong>Capital:</strong> {capital}</p>\r\n                    </div>\r\n                    <div>\r\n                        <p><strong>Top Level Domain:</strong> {topLevelDomain}</p>\r\n                        <p><strong>Currencies:</strong> {currencies.map((item)=> <span key={item.name}>{item.name}</span>)}</p>\r\n                        <p className=\"languages\"><strong>Languages:</strong> {languages.map((item)=> <span key={item.name}>{item.name}</span>)}</p>\r\n                    </div>\r\n                </div>\r\n              \r\n                <p className=\"borders\"><strong>Border Contries:</strong></p>\r\n                {/* {borders.map((item)=> <span onClick={handleClick} key={item} className=\"border-item\">{item}</span>)} */}\r\n                {borders.map((item)=> <Borders key={item} className=\"border-item\" item={item}/>)}\r\n                </div>\r\n            </CountrySelectedStyled>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default countrySelected\r\n","import React,{useState, useEffect} from 'react'\r\nimport styled from 'styled-components'\r\nimport Wrapper from './wrapper'\r\nimport  { useSelector } from 'react-redux'\r\nimport CountrySelected from './country-selected'\r\nconst CountryPageStyled=styled.div`\r\n.back{\r\n    background:var(--white);\r\n    box-shadow:0 0 10px rgba(0,0,0,.5);\r\n    padding:.7em 2.2em;\r\n    border-radius:5px;\r\n    color: var(--black);\r\n    cursor: pointer;\r\n    font-weight:300;\r\n    border:none;\r\n    margin-top:1em;\r\n    i{\r\n        margin-right:5px;\r\n    }\r\n}\r\n\r\n@media screen and (min-width:1024px){\r\n    .back{\r\n        margin-top:3em;\r\n    }\r\n}\r\n`\r\n\r\nfunction CountryPage({ match, history}) {\r\n    // console.log(\"HISTORY\",match.params.id);\r\n    // console.log(\"HISTORY\",history);\r\n    let DBcountry = useSelector(state => state.countryList.find(item => item.alpha3Code  === match.params.id.replace('-',' '))) // match viene de props, que muestra la ruta actual y los parametros que contiene.\r\n    // console.log(\"db..>\",DBcountry);\r\n    const aux= DBcountry;\r\n    \r\n    // console.log(\"aux  \",aux.name);\r\n    const [country,setCountry]=useState(DBcountry)\r\n    // console.log(country);\r\n    if(country){\r\n        if(typeof aux !== 'undefined'){\r\n        if(country.alpha3Code!== aux.alpha3Code){\r\n            setCountry(aux);\r\n        }\r\n    }\r\n    }\r\n    useEffect(()=>{\r\n        if(DBcountry){\r\n            \r\n        }\r\n        if(!country){\r\n            fetch(`https://restcountries.eu/rest/v2/alpha/${match.params.id}`)\r\n            .then((resonse)=>{\r\n                return resonse.json()\r\n            })\r\n            .then((data)=>{\r\n                setCountry(data);\r\n            })\r\n        }\r\n    })\r\n    function handleClick() {\r\n        history.goBack();\r\n    }\r\n    return (\r\n        <CountryPageStyled>\r\n            <Wrapper>\r\n                <button className=\"back\" onClick={handleClick}><i className=\"fas fa-long-arrow-alt-left\"></i> Back</button>\r\n            <CountrySelected {...country}/>\r\n            </Wrapper>\r\n        </CountryPageStyled>\r\n    )\r\n}\r\n\r\nexport default CountryPage\r\n","import React,{ useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport {createStore} from 'redux'\nimport {Provider} from 'react-redux'\nimport reducer from './reducer'\nimport CountryList from \"./country-list\";\nimport ActionList from './action-list'\nimport Header from './header'\nimport CountryPage from './country-page'\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nconst initialState={\n  countryList:[],\n  countryListByName:[],\n  countryFilteredByRegion:[],\n  filterByRegion:'',\n}\nconst store=createStore(reducer,initialState)\nfunction App() {\n  const [darkMode, setDarkMode] = useState(false)\n  const [checked, setChecked] = useState(false)\n  const mainClass = darkMode ? 'is-dark-mode' : 'is-light-mode'\n\n  function changeMedia(mq) {\n    setDarkMode(mq.matches)\n    setChecked(mq.matches)\n  }\n\n  useEffect(() => {\n    const mq = window.matchMedia('(prefers-color-scheme: dark)')\n    mq.addListener(changeMedia)\n    setDarkMode(mq.matches)\n    setChecked(mq.matches)\n    return () => {\n      mq.removeListener(changeMedia)\n    }\n  }, [])\n  return (\n    <main className={mainClass}>\n    <Provider store={store}>\n      <Router>\n      <Header setDarkMode={setDarkMode} darkMode={darkMode} />\n      <Switch>\n      <Route path=\"/country/:id\" component={CountryPage}> \n      {/* Con Route --> Redirecciona asi a un componente si existen coincidencias */}\n      </Route>\n      <Route path=\"/\">\n      <ActionList/>\n      <CountryList/>\n      </Route>\n      </Switch>\n      </Router>\n    </Provider>\n    </main>\n  );\n}\n\nexport default App;\n","export default function reducer(state, action) {\r\n    // console.log(action);\r\n    switch (action.type) {\r\n      case 'SET_COUNTRY_LIST':\r\n        // console.log('Actualizando los datos');\r\n        return {...state, countryList: action.payload} // spredd operator\r\n      \r\n      case 'SET_COUNTRY_BY_NAME':\r\n        let list\r\n        if(state.filterByRegion!==''){\r\n          list=state.countryFilteredByRegion\r\n        }else{\r\n          list=state.countryList\r\n        }\r\n        const countryListByName=list.filter(country => country.name.toLowerCase().includes(action.payload.toLowerCase()))\r\n        return {...state, countryListByName}\r\n  \r\n      case 'FILTER_BY_REGION':\r\n        const {regionSelected}=action.payload\r\n        if(''=== regionSelected){\r\n          return {...state, countryFilteredByRegion:[],filterByRegion:''}\r\n        }\r\n        const countryFilteredByRegion=state.countryList.filter((country)=>country.region === regionSelected)\r\n        return {...state, countryFilteredByRegion,filterByRegion:regionSelected}\r\n      default:\r\n  \r\n        return state;\r\n    }\r\n  }\r\n  ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}